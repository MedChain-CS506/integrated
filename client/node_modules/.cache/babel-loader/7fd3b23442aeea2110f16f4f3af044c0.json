{"ast":null,"code":"import _slicedToArray from \"/home/n3m0/Documents/integrated/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/n3m0/Documents/integrated/client/src/components/Dialog/SettingsDialog/SettingsDialog.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views'; //* MUI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SecurityIcon from '@material-ui/icons/Security'; //* tabs\n\nimport AccountTab from './tabs/AccountTab';\nimport SecurityTab from './tabs/SecurityTab';\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n  tabs: {\n    display: 'initial'\n  }\n}));\nconst tabs = [{\n  key: 'account',\n  icon: React.createElement(AccountCircleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }),\n  label: 'Account'\n}, {\n  key: 'security',\n  icon: React.createElement(SecurityIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }),\n  label: 'Security'\n}];\n\nconst SettingsDialog = ({\n  dialogProps,\n  user,\n  userData,\n  openSnackbar,\n  onDeleteAccountClick\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedTab = _useState2[0],\n        setSelectedTab = _useState2[1];\n\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(DialogTitle, {\n    disableTypography: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Settings\"), React.createElement(Tooltip, {\n    title: \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.closeButton,\n    onClick: dialogProps.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    classes: {\n      root: classes.tabs\n    },\n    style: {\n      overflow: 'initial',\n      minHeight: 'initial'\n    },\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    onChange: (event, value) => setSelectedTab(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, tabs.map(tab => React.createElement(Tab, {\n    key: tab.key,\n    icon: tab.icon,\n    label: tab.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    classes: {\n      root: classes.tabs\n    },\n    style: {\n      overflow: 'initial',\n      minHeight: 'initial'\n    },\n    indicatorColor: \"primary\",\n    scrollButtons: \"off\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    onChange: (event, value) => setSelectedTab(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, tabs.map(tab => React.createElement(Tab, {\n    key: tab.key,\n    icon: tab.icon,\n    label: tab.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))), React.createElement(SwipeableViews, {\n    index: selectedTab,\n    onChangeIndex: index => setSelectedTab(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(AccountTab, {\n    user: user,\n    userData: userData,\n    openSnackbar: openSnackbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(SecurityTab, {\n    user: user,\n    userData: userData,\n    openSnackbar: openSnackbar,\n    onDeleteAccountClick: onDeleteAccountClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })));\n};\n\nSettingsDialog.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  openSnackbar: PropTypes.func.isRequired,\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\nexport default SettingsDialog;","map":{"version":3,"sources":["/home/n3m0/Documents/integrated/client/src/components/Dialog/SettingsDialog/SettingsDialog.js"],"names":["React","useState","PropTypes","SwipeableViews","makeStyles","Dialog","DialogTitle","Typography","Tooltip","IconButton","Tabs","Tab","Hidden","CloseIcon","AccountCircleIcon","SecurityIcon","AccountTab","SecurityTab","useStyles","theme","closeButton","position","right","spacing","top","tabs","display","key","icon","label","SettingsDialog","dialogProps","user","userData","openSnackbar","onDeleteAccountClick","classes","selectedTab","setSelectedTab","onClose","root","overflow","minHeight","event","value","map","tab","index","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\n\n//* MUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SecurityIcon from '@material-ui/icons/Security';\n\n//* tabs\nimport AccountTab from './tabs/AccountTab';\nimport SecurityTab from './tabs/SecurityTab';\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n\n  tabs: {\n    display: 'initial',\n  },\n}));\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account',\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security',\n  },\n];\n\nconst SettingsDialog = ({\n  dialogProps,\n  user,\n  userData,\n  openSnackbar,\n  onDeleteAccountClick,\n}) => {\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <Dialog {...dialogProps}>\n      <DialogTitle disableTypography>\n        <Typography variant=\"h6\">Settings</Typography>\n\n        <Tooltip title=\"Close\">\n          <IconButton\n            className={classes.closeButton}\n            onClick={dialogProps.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Tooltip>\n      </DialogTitle>\n\n      <Hidden xsDown>\n        <Tabs\n          classes={{ root: classes.tabs }}\n          style={{ overflow: 'initial', minHeight: 'initial' }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          onChange={(event, value) => setSelectedTab(value)}\n        >\n          {tabs.map(tab => (\n            <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n          ))}\n        </Tabs>\n      </Hidden>\n\n      <Hidden smUp>\n        <Tabs\n          classes={{ root: classes.tabs }}\n          style={{ overflow: 'initial', minHeight: 'initial' }}\n          indicatorColor=\"primary\"\n          scrollButtons=\"off\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          onChange={(event, value) => setSelectedTab(value)}\n        >\n          {tabs.map(tab => (\n            <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n          ))}\n        </Tabs>\n      </Hidden>\n\n      <SwipeableViews\n        index={selectedTab}\n        onChangeIndex={index => setSelectedTab(index)}\n      >\n        <AccountTab\n          user={user}\n          userData={userData}\n          openSnackbar={openSnackbar}\n        />\n\n        <SecurityTab\n          user={user}\n          userData={userData}\n          openSnackbar={openSnackbar}\n          onDeleteAccountClick={onDeleteAccountClick}\n        />\n      </SwipeableViews>\n    </Dialog>\n  );\n};\n\nSettingsDialog.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  openSnackbar: PropTypes.func.isRequired,\n  onDeleteAccountClick: PropTypes.func.isRequired,\n};\n\nexport default SettingsDialog;\n"]},"metadata":{},"sourceType":"module"}