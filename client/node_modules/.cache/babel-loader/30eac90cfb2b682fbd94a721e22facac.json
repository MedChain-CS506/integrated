{"ast":null,"code":"import _slicedToArray from \"/home/n3m0/Documents/integrated/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/n3m0/Documents/integrated/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/n3m0/Documents/integrated/client/src/components/Dialog/DeleteAccountDialog/DeleteAccountDialog.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport authentication from '../../../utils/authentication';\n\nconst DeleteAccountDialog = (_ref) => {\n  let dialogProps = _ref.dialogProps,\n      props = _objectWithoutProperties(_ref, [\"dialogProps\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        performingAction = _useState2[0],\n        setPerformingAction = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const deleteAccount = () => {\n    setPerformingAction(true);\n    authentication.deleteAccount().then(() => {\n      dialogProps.onClose();\n      props.openSnackbar('Deleted account');\n    }).catch(reason => {\n      const code = reason.code;\n      const message = reason.message;\n\n      switch (code) {\n        default:\n          props.openSnackbar(message);\n      }\n    }).finally(() => {\n      setPerformingAction(false);\n    });\n  };\n\n  const handleKeyPress = event => {\n    if (!email && userData) return; // eslint-disable-line\n\n    if (email !== userData.email) return; // eslint-disable-line\n\n    const key = event.key;\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) return;\n    if (key === 'Enter') deleteAccount();\n  };\n\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    onKeyPress: () => handleKeyPress(),\n    onExited: () => setEmail(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Delete account?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Box, {\n    mb: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Deleted accounts can\\u2019t be recovered. All data associated with your account will be deleted.\"), React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Type your email and \", React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"click\"), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"tap\"), \" Delete to delete your account. This action is irreversible.\")), React.createElement(TextField, {\n    autoComplete: \"email\",\n    disabled: performingAction,\n    fullWidth: true,\n    label: \"Email\" // placeholder={userData.email}\n    ,\n    required: true,\n    type: \"email\",\n    value: email,\n    variant: \"outlined\",\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    disabled: performingAction,\n    onClick: dialogProps.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    color: \"secondary\",\n    disabled: performingAction,\n    variant: \"contained\",\n    onClick: deleteAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Delete\")));\n};\n\nDeleteAccountDialog.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object.isRequired\n};\nexport default DeleteAccountDialog;","map":{"version":3,"sources":["/home/n3m0/Documents/integrated/client/src/components/Dialog/DeleteAccountDialog/DeleteAccountDialog.js"],"names":["React","useState","PropTypes","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Hidden","Box","TextField","Button","authentication","DeleteAccountDialog","dialogProps","props","performingAction","setPerformingAction","email","setEmail","deleteAccount","then","onClose","openSnackbar","catch","reason","code","message","finally","handleKeyPress","event","userData","key","altKey","ctrlKey","metaKey","shiftKey","e","target","value","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport authentication from '../../../utils/authentication';\n\nconst DeleteAccountDialog = ({ dialogProps, ...props }) => {\n  const [performingAction, setPerformingAction] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const deleteAccount = () => {\n    setPerformingAction(true);\n    authentication\n      .deleteAccount()\n      .then(() => {\n        dialogProps.onClose();\n        props.openSnackbar('Deleted account');\n      })\n      .catch(reason => {\n        const { code } = reason;\n        const { message } = reason;\n\n        switch (code) {\n          default:\n            props.openSnackbar(message);\n        }\n      })\n      .finally(() => {\n        setPerformingAction(false);\n      });\n  };\n\n  const handleKeyPress = event => {\n    if (!email && userData) return; // eslint-disable-line\n    if (email !== userData.email) return; // eslint-disable-line\n    const { key } = event;\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey)\n      return;\n    if (key === 'Enter') deleteAccount();\n  };\n\n  return (\n    <Dialog\n      {...dialogProps}\n      onKeyPress={() => handleKeyPress()}\n      onExited={() => setEmail('')}\n    >\n      <DialogTitle>Delete account?</DialogTitle>\n\n      <DialogContent>\n        <Box mb={3}>\n          <DialogContentText>\n            Deleted accounts can’t be recovered. All data associated with your\n            account will be deleted.\n          </DialogContentText>\n          <DialogContentText>\n            Type your email and <Hidden xsDown>click</Hidden>\n            <Hidden smUp>tap</Hidden> Delete to delete your account. This action\n            is irreversible.\n          </DialogContentText>\n        </Box>\n\n        <TextField\n          autoComplete=\"email\"\n          disabled={performingAction}\n          fullWidth\n          label=\"Email\"\n          // placeholder={userData.email}\n          required\n          type=\"email\"\n          value={email}\n          variant=\"outlined\"\n          onChange={e => setEmail(e.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color=\"secondary\"\n          disabled={performingAction}\n          onClick={dialogProps.onClose}\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"secondary\"\n          disabled={performingAction}\n          variant=\"contained\"\n          onClick={deleteAccount}\n        >\n          Delete\n        </Button>\n        {/* ^disabled={performingAction || (email !== userData.email)} */}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeleteAccountDialog.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object.isRequired,\n};\n\nexport default DeleteAccountDialog;\n"]},"metadata":{},"sourceType":"module"}