{"ast":null,"code":"import _slicedToArray from \"/home/n3m0/Documents/integrated/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/n3m0/Documents/integrated/client/src/components/Dialog/SettingsDialog/tabs/AccountTab/AccountTab.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport constraints from '../../../../../utils/constraints';\nimport authentication from '../../../../../utils/authentication';\nconst useStyles = makeStyles(theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nconst AccountTab = ({\n  user,\n  userData,\n  openSnackbar\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        showingField = _useState2[0],\n        setShowingField = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstName = _useState4[0],\n        setFirstName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lastName = _useState6[0],\n        setLastName = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        performingAction = _useState10[0],\n        setPerformingAction = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errors = _useState12[0],\n        setErrors = _useState12[1];\n\n  const classes = useStyles();\n\n  const showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    setShowingField(fieldId);\n  };\n\n  const hideFields = () => {\n    setShowingField('');\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setErrors(null);\n  };\n\n  const changeFirstName = () => {\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      setErrors(errors);\n      return;\n    }\n\n    setErrors(null);\n\n    if (firstName === userData.firstName) {\n      return;\n    }\n\n    setPerformingAction(true);\n    authentication.changeFirstName(firstName).then(() => {\n      hideFields();\n      openSnackbar('Changed first name');\n    }).catch(reason => {\n      const code = reason.code;\n      const message = reason.message;\n\n      switch (code) {\n        default:\n          openSnackbar(message);\n          return;\n      }\n    }).finally(() => {\n      setPerformingAction(false);\n    });\n  };\n\n  const changeLastName = () => {\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      setErrors(errors);\n      return;\n    }\n\n    setErrors(null);\n\n    if (lastName === userData.lastName) {\n      return;\n    }\n\n    setPerformingAction(true);\n    authentication.changeLastName(lastName).then(() => {\n      hideFields();\n      openSnackbar('Changed last name');\n    }).catch(reason => {\n      const code = reason.code;\n      const message = reason.message;\n\n      switch (code) {\n        default:\n          openSnackbar(message);\n          return;\n      }\n    }).finally(() => {\n      setPerformingAction(false);\n    });\n  };\n\n  const changeEmail = () => {\n    const errors = validate({\n      email: email\n    }, {\n      email: constraints.email\n    });\n\n    if (errors) {\n      setErrors(errors);\n      return;\n    }\n\n    setErrors(null);\n\n    if (email === userData.email) {\n      return;\n    }\n\n    setPerformingAction(true);\n    authentication.changeEmail(email).then(() => {\n      openSnackbar('Changed email address');\n      hideFields();\n    }).catch(reason => {\n      const code = reason.code;\n      const message = reason.message;\n\n      switch (code) {\n        default:\n          openSnackbar(message);\n          return;\n      }\n    }).finally(() => {\n      setPerformingAction(false);\n    });\n  };\n\n  const changeField = fieldId => {\n    switch (fieldId) {\n      case 'first-name':\n        changeFirstName();\n        return;\n\n      case 'last-name':\n        changeLastName();\n        return;\n\n      case 'email':\n        changeEmail();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      hideFields();\n    } else if (key === 'Enter') {\n      changeField(fieldId);\n    }\n  };\n\n  return React.createElement(DialogContent, {\n    classes: {\n      root: classes.dialogContent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(List, {\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }))), !userData.firstName && React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"No first name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(WarningIcon, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }))), showingField === 'first-name' && React.createElement(TextField, {\n    autoComplete: \"given-name\",\n    autoFocus: true,\n    disabled: performingAction,\n    error: !!(errors && errors.firstName),\n    fullWidth: true,\n    helperText: errors && errors.firstName ? errors.firstName[0] : 'Press Enter to change your first name',\n    label: \"First name\",\n    placeholder: userData.firstName,\n    required: true,\n    type: \"text\",\n    value: firstName,\n    variant: \"filled\",\n    onBlur: () => hideFields(),\n    onKeyDown: event => handleKeyDown(event, 'first-name'),\n    onChange: event => setFirstName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), showingField !== 'first-name' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    primary: \"First name\",\n    secondary: userData.firstName ? userData.firstName : 'You donâ€™t have a first name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, userData.firstName && React.createElement(Tooltip, {\n    title: \"Change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: performingAction,\n    onClick: () => showField('first-name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  })))), !userData.firstName && React.createElement(Button, {\n    color: \"primary\",\n    disabled: performingAction,\n    variant: \"contained\",\n    onClick: () => showField('first-name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"Add\")))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }))), !userData.lastName && React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"No last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(WarningIcon, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }))), showingField === 'last-name' && React.createElement(TextField, {\n    autoComplete: \"family-name\",\n    autoFocus: true,\n    disabled: performingAction,\n    error: !!(errors && errors.lastName),\n    fullWidth: true,\n    helperText: errors && errors.lastName ? errors.lastName[0] : 'Press Enter to change your last name',\n    label: \"Last name\",\n    placeholder: userData.lastName,\n    required: true,\n    type: \"text\",\n    value: lastName,\n    variant: \"filled\",\n    onBlur: () => hideFields(),\n    onKeyDown: event => handleKeyDown(event, 'last-name'),\n    onChange: event => setLastName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }), showingField !== 'last-name' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    primary: \"Last name\",\n    secondary: userData.lastName ? userData.lastName : 'You donâ€™t have a last name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, userData.lastName && React.createElement(Tooltip, {\n    title: \"Change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: performingAction,\n    onClick: () => showField('last-name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  })))), !userData.lastName && React.createElement(Button, {\n    color: \"primary\",\n    disabled: performingAction,\n    variant: \"contained\",\n    onClick: () => showField('last-name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, \"Add\")))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(EmailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }))), !user.email && React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"No e-mail address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(WarningIcon, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }))), showingField === 'email' && React.createElement(TextField, {\n    autoComplete: \"email\",\n    autoFocus: true,\n    disabled: performingAction,\n    error: !!(errors && errors.emailAddress),\n    fullWidth: true,\n    helperText: errors && errors.emailAddress ? errors.emailAddress[0] : 'Press Enter to change your e-mail address',\n    label: \"E-mail address\",\n    placeholder: user.email,\n    required: true,\n    type: \"email\",\n    value: email,\n    variant: \"filled\",\n    onBlur: () => hideFields(),\n    onKeyDown: event => handleKeyDown(event, 'email'),\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }), showingField !== 'email' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    primary: \"E-mail address\",\n    secondary: user.email ? user.email : 'You donâ€™t have an e-mail address',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }), user.email && React.createElement(Box, {\n    clone: true,\n    mr: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Verify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    disabled: performingAction,\n    onClick: console.log('verifyEmailAddress'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, React.createElement(CheckIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  })))))), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, user.email && React.createElement(Tooltip, {\n    title: \"Change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: performingAction,\n    onClick: () => showField('email'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  })))), !user.email && React.createElement(Button, {\n    color: \"primary\",\n    disabled: performingAction,\n    variant: \"contained\",\n    onClick: () => showField('email'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, \"Add\"))))));\n};\n\nAccountTab.propTypes = {\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n  openSnackbar: PropTypes.func.isRequired\n};\nexport default AccountTab;","map":{"version":3,"sources":["/home/n3m0/Documents/integrated/client/src/components/Dialog/SettingsDialog/tabs/AccountTab/AccountTab.js"],"names":["React","useState","PropTypes","validate","makeStyles","Grid","Typography","DialogContent","Box","Button","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Hidden","TextField","Tooltip","IconButton","PersonIcon","EditIcon","EmailIcon","WarningIcon","CheckIcon","constraints","authentication","useStyles","theme","dialogContent","paddingTop","spacing","AccountTab","user","userData","openSnackbar","showingField","setShowingField","firstName","setFirstName","lastName","setLastName","email","setEmail","performingAction","setPerformingAction","errors","setErrors","classes","showField","fieldId","hideFields","changeFirstName","then","catch","reason","code","message","finally","changeLastName","changeEmail","changeField","handleKeyDown","event","altKey","ctrlKey","metaKey","shiftKey","key","root","target","value","emailAddress","console","log","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport constraints from '../../../../../utils/constraints';\nimport authentication from '../../../../../utils/authentication';\n\nconst useStyles = makeStyles(theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nconst AccountTab = ({ user, userData, openSnackbar }) => {\n  const [showingField, setShowingField] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [performingAction, setPerformingAction] = useState(false);\n  const [errors, setErrors] = useState(null);\n\n  const classes = useStyles();\n\n  const showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n    setShowingField(fieldId);\n  };\n\n  const hideFields = () => {\n    setShowingField('');\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setErrors(null);\n  };\n\n  const changeFirstName = () => {\n    const errors = validate(\n      {\n        firstName: firstName,\n      },\n      {\n        firstName: constraints.firstName,\n      }\n    );\n\n    if (errors) {\n      setErrors(errors);\n\n      return;\n    }\n\n    setErrors(null);\n\n    if (firstName === userData.firstName) {\n      return;\n    }\n\n    setPerformingAction(true);\n\n    authentication\n      .changeFirstName(firstName)\n      .then(() => {\n        hideFields();\n        openSnackbar('Changed first name');\n      })\n      .catch(reason => {\n        const {code} = reason;\n        const {message} = reason;\n\n        switch (code) {\n          default:\n            openSnackbar(message);\n            return;\n        }\n      })\n      .finally(() => {\n        setPerformingAction(false);\n      });\n  };\n\n  const changeLastName = () => {\n    const errors = validate(\n      {\n        lastName: lastName,\n      },\n      {\n        lastName: constraints.lastName,\n      }\n    );\n\n    if (errors) {\n      setErrors(errors);\n\n      return;\n    }\n\n    setErrors(null);\n\n    if (lastName === userData.lastName) {\n      return;\n    }\n\n    setPerformingAction(true);\n\n    authentication\n      .changeLastName(lastName)\n      .then(() => {\n        hideFields();\n        openSnackbar('Changed last name');\n      })\n      .catch(reason => {\n        const {code} = reason;\n        const {message} = reason;\n\n        switch (code) {\n          default:\n            openSnackbar(message);\n            return;\n        }\n      })\n      .finally(() => {\n        setPerformingAction(false);\n      });\n  };\n\n  const changeEmail = () => {\n    const errors = validate(\n      {\n        email: email,\n      },\n      {\n        email: constraints.email,\n      }\n    );\n\n    if (errors) {\n      setErrors(errors);\n\n      return;\n    }\n\n    setErrors(null);\n\n    if (email === userData.email) {\n      return;\n    }\n\n    setPerformingAction(true);\n\n    authentication\n      .changeEmail(email)\n      .then(() => {\n        openSnackbar('Changed email address');\n        hideFields();\n      })\n      .catch(reason => {\n        const {code} = reason;\n        const {message} = reason;\n\n        switch (code) {\n          default:\n            openSnackbar(message);\n            return;\n        }\n      })\n      .finally(() => {\n        setPerformingAction(false);\n      });\n  };\n\n  const changeField = fieldId => {\n    switch (fieldId) {\n      case 'first-name':\n        changeFirstName();\n        return;\n\n      case 'last-name':\n        changeLastName();\n        return;\n\n      case 'email':\n        changeEmail();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const {key} = event;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      hideFields();\n    } else if (key === 'Enter') {\n      changeField(fieldId);\n    }\n  };\n\n  return (\n    <DialogContent classes={{ root: classes.dialogContent }}>\n      <List disablePadding>\n        <ListItem>\n          <Hidden xsDown>\n            <ListItemIcon>\n              <PersonIcon />\n            </ListItemIcon>\n          </Hidden>\n\n          {!userData.firstName && (\n            <ListItemIcon>\n              <Tooltip title=\"No first name\">\n                <WarningIcon color=\"error\" />\n              </Tooltip>\n            </ListItemIcon>\n          )}\n\n          {showingField === 'first-name' && (\n            <TextField\n              autoComplete=\"given-name\"\n              autoFocus\n              disabled={performingAction}\n              error={!!(errors && errors.firstName)}\n              fullWidth\n              helperText={\n                errors && errors.firstName\n                  ? errors.firstName[0]\n                  : 'Press Enter to change your first name'\n              }\n              label=\"First name\"\n              placeholder={userData.firstName}\n              required\n              type=\"text\"\n              value={firstName}\n              variant=\"filled\"\n              onBlur={() => hideFields()}\n              onKeyDown={event => handleKeyDown(event, 'first-name')}\n              onChange={event => setFirstName(event.target.value)}\n            />\n          )}\n\n          {showingField !== 'first-name' && (\n            <>\n              <ListItemText\n                primary=\"First name\"\n                secondary={\n                  userData.firstName\n                    ? userData.firstName\n                    : 'You donâ€™t have a first name'\n                }\n              />\n\n              <ListItemSecondaryAction>\n                {userData.firstName && (\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton\n                        disabled={performingAction}\n                        onClick={() => showField('first-name')}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                )}\n\n                {!userData.firstName && (\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    variant=\"contained\"\n                    onClick={() => showField('first-name')}\n                  >\n                    Add\n                  </Button>\n                )}\n              </ListItemSecondaryAction>\n            </>\n          )}\n        </ListItem>\n\n        <ListItem>\n          <Hidden xsDown>\n            <ListItemIcon>\n              <PersonIcon />\n            </ListItemIcon>\n          </Hidden>\n\n          {!userData.lastName && (\n            <ListItemIcon>\n              <Tooltip title=\"No last name\">\n                <WarningIcon color=\"error\" />\n              </Tooltip>\n            </ListItemIcon>\n          )}\n\n          {showingField === 'last-name' && (\n            <TextField\n              autoComplete=\"family-name\"\n              autoFocus\n              disabled={performingAction}\n              error={!!(errors && errors.lastName)}\n              fullWidth\n              helperText={\n                errors && errors.lastName\n                  ? errors.lastName[0]\n                  : 'Press Enter to change your last name'\n              }\n              label=\"Last name\"\n              placeholder={userData.lastName}\n              required\n              type=\"text\"\n              value={lastName}\n              variant=\"filled\"\n              onBlur={() => hideFields()}\n              onKeyDown={event => handleKeyDown(event, 'last-name')}\n              onChange={event => setLastName(event.target.value)}\n            />\n          )}\n\n          {showingField !== 'last-name' && (\n            <>\n              <ListItemText\n                primary=\"Last name\"\n                secondary={\n                  userData.lastName\n                    ? userData.lastName\n                    : 'You donâ€™t have a last name'\n                }\n              />\n\n              <ListItemSecondaryAction>\n                {userData.lastName && (\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton\n                        disabled={performingAction}\n                        onClick={() => showField('last-name')}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                )}\n\n                {!userData.lastName && (\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    variant=\"contained\"\n                    onClick={() => showField('last-name')}\n                  >\n                    Add\n                  </Button>\n                )}\n              </ListItemSecondaryAction>\n            </>\n          )}\n        </ListItem>\n\n        <ListItem>\n          <Hidden xsDown>\n            <ListItemIcon>\n              <EmailIcon />\n            </ListItemIcon>\n          </Hidden>\n\n          {!user.email && (\n            <ListItemIcon>\n              <Tooltip title=\"No e-mail address\">\n                <WarningIcon color=\"error\" />\n              </Tooltip>\n            </ListItemIcon>\n          )}\n\n          {showingField === 'email' && (\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              disabled={performingAction}\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={\n                errors && errors.emailAddress\n                  ? errors.emailAddress[0]\n                  : 'Press Enter to change your e-mail address'\n              }\n              label=\"E-mail address\"\n              placeholder={user.email}\n              required\n              type=\"email\"\n              value={email}\n              variant=\"filled\"\n              onBlur={() => hideFields()}\n              onKeyDown={event => handleKeyDown(event, 'email')}\n              onChange={event => setEmail(event.target.value)}\n            />\n          )}\n\n          {showingField !== 'email' && (\n            <>\n              <ListItemText\n                primary=\"E-mail address\"\n                secondary={\n                  user.email ? user.email : 'You donâ€™t have an e-mail address'\n                }\n              />\n\n              {user.email && (\n                <Box clone mr={7}>\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Verify\">\n                      <div>\n                        <IconButton\n                          color=\"secondary\"\n                          disabled={performingAction}\n                          onClick={console.log('verifyEmailAddress')}\n                        >\n                          <CheckIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </Box>\n              )}\n\n              <ListItemSecondaryAction>\n                {user.email && (\n                  <Tooltip title=\"Change\">\n                    <div>\n                      <IconButton\n                        disabled={performingAction}\n                        onClick={() => showField('email')}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </div>\n                  </Tooltip>\n                )}\n\n                {!user.email && (\n                  <Button\n                    color=\"primary\"\n                    disabled={performingAction}\n                    variant=\"contained\"\n                    onClick={() => showField('email')}\n                  >\n                    Add\n                  </Button>\n                )}\n              </ListItemSecondaryAction>\n            </>\n          )}\n        </ListItem>\n      </List>\n    </DialogContent>\n  );\n};\n\nAccountTab.propTypes = {\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object.isRequired,\n  openSnackbar: PropTypes.func.isRequired,\n};\n\nexport default AccountTab;\n"]},"metadata":{},"sourceType":"module"}