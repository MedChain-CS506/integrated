{"ast":null,"code":"import _defineProperty from \"/home/n3m0/Documents/integrated/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_PATIENTS, GET_PATIENT, GET_RECORDS, CLEAR_PATIENTS, SET_LOADING } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case SEARCH_PATIENTS:\n      return _objectSpread({}, state, {\n        patients: action.payload,\n        loading: false\n      });\n\n    case GET_PATIENT:\n      return _objectSpread({}, state, {\n        patient: action.payload,\n        loading: false\n      });\n\n    case CLEAR_PATIENTS:\n      return _objectSpread({}, state, {\n        patients: [],\n        loading: false\n      });\n\n    case GET_RECORDS:\n      return _objectSpread({}, state, {\n        records: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/n3m0/Documents/integrated/client/src/context/patient/PatientReducer.js"],"names":["SEARCH_PATIENTS","GET_PATIENT","GET_RECORDS","CLEAR_PATIENTS","SET_LOADING","state","action","type","patients","payload","loading","patient","records"],"mappings":";;;;;;AAAA,SACEA,eADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,WALF,QAMO,UANP;AAQA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKT,WAAL;AACE,+BACKI,KADL;AAEEM,QAAAA,OAAO,EAAEL,MAAM,CAACG,OAFlB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKP,cAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,QAAQ,EAAE,EAFZ;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKR,WAAL;AACE,+BACKG,KADL;AAEEO,QAAAA,OAAO,EAAEN,MAAM,CAACG,OAFlB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKN,WAAL;AACE,+BACKC,KADL;AAEEK,QAAAA,OAAO,EAAE;AAFX;;AAKF;AACE,aAAOL,KAAP;AApCJ;AAsCD,CAvCD","sourcesContent":["import {\n  SEARCH_PATIENTS,\n  GET_PATIENT,\n  GET_RECORDS,\n  CLEAR_PATIENTS,\n  SET_LOADING,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_PATIENTS:\n      return {\n        ...state,\n        patients: action.payload,\n        loading: false,\n      };\n\n    case GET_PATIENT:\n      return {\n        ...state,\n        patient: action.payload,\n        loading: false,\n      };\n\n    case CLEAR_PATIENTS:\n      return {\n        ...state,\n        patients: [],\n        loading: false,\n      };\n\n    case GET_RECORDS:\n      return {\n        ...state,\n        records: action.payload,\n        loading: false,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}