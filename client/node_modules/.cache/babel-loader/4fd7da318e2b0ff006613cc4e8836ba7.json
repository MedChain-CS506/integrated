{"ast":null,"code":"var _jsxFileName = \"/home/n3m0/Documents/integrated/client/src/components/PatientTable/PatientTable.js\";\nimport React from 'react'; //* MUI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; // TODO: GIVE THE LINK THE PROFILE\n\nconst columns = [{\n  id: 'aadhar',\n  label: 'Aadhar #',\n  minWidth: 170\n}, {\n  id: 'lastName',\n  label: 'Last Name',\n  minWidth: 170\n}, {\n  id: 'firstName',\n  label: 'First Name',\n  minWidth: 170,\n  format: value => value.toLocaleString()\n}, {\n  id: 'button',\n  label: 'Profile',\n  minWidth: 170,\n  align: 'right'\n}];\n\nfunction createObject(aadhar, firstName, lastName, profile) {\n  return {\n    aadhar,\n    firstName,\n    lastName,\n    profile\n  };\n}\n\nconst rows = [createObject(499118665246, 'Muhammad', 'Muhammad', 1), createObject(499118665246, 'Muhammad', 'Muhammad', 2), createObject(499118665246, 'Muhammad', 'Muhammad', 3), createObject(499118665246, 'Muhammad', 'Muhammad', 4), createObject(499118665246, 'Muhammad', 'Muhammad', 5), createObject(499118665246, 'Muhammad', 'Muhammad', 6), createObject(499118665246, 'Muhammad', 'Muhammad', 7), createObject(499118665246, 'Muhammad', 'Muhammad', 8), createObject(499118665246, 'Muhammad', 'Muhammad', 9), createObject(499118665246, 'Muhammad', 'Muhammad', 10), createObject(499118665246, 'Muhammad', 'Muhammad', 11)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  tableWrapper: {\n    overflow: 'auto'\n  }\n});\n\nconst PatientTable = () => {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    key: row.code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, columns.map(column => {\n    const value = row[column.id];\n    return React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, column.format && typeof value === 'number' ? column.format(value) : value);\n  })))))))));\n};\n\nexport default PatientTable;","map":{"version":3,"sources":["/home/n3m0/Documents/integrated/client/src/components/PatientTable/PatientTable.js"],"names":["React","makeStyles","Paper","Grid","Table","TableBody","TableCell","TableHead","TableRow","columns","id","label","minWidth","format","value","toLocaleString","align","createObject","aadhar","firstName","lastName","profile","rows","useStyles","root","width","tableWrapper","overflow","PatientTable","classes","map","column","row","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE,UAAvB;AAAmCC,EAAAA,QAAQ,EAAE;AAA7C,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE,WAAzB;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAFc,EAGd;AACEF,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,MAAM,EAAEC,KAAK,IAAIA,KAAK,CAACC,cAAN;AAJnB,CAHc,EASd;AAAEL,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE,SAAvB;AAAkCC,EAAAA,QAAQ,EAAE,GAA5C;AAAiDI,EAAAA,KAAK,EAAE;AAAxD,CATc,CAAhB;;AAYA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,OAAnD,EAA4D;AAC1D,SAAO;AAAEH,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXL,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CADD,EAEXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CAFD,EAGXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CAHD,EAIXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CAJD,EAKXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CALD,EAMXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CAND,EAOXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CAPD,EAQXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CARD,EASXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,CAAvC,CATD,EAUXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,EAAvC,CAVD,EAWXA,YAAY,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,EAAvC,CAXD,CAAb;AAcA,MAAMM,SAAS,GAAGtB,UAAU,CAAC;AAC3BuB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAK3BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AADE;AALa,CAAD,CAA5B;;AAUA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEM,OAAO,CAACL,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACH,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,CAACqB,GAAR,CAAYC,MAAM,IACjB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACrB,EADd;AAEE,IAAA,KAAK,EAAEqB,MAAM,CAACf,KAFhB;AAGE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAEmB,MAAM,CAACnB;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGmB,MAAM,CAACpB,KALV,CADD,CADH,CADF,CADF,EAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,IAAI,CAACQ,GAAL,CAASE,GAAG,IACX,oBAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,IAAI,EAAC,UAArB;AAAgC,IAAA,QAAQ,EAAE,CAAC,CAA3C;AAA8C,IAAA,GAAG,EAAEA,GAAG,CAACC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,OAAO,CAACqB,GAAR,CAAYC,MAAM,IAAI;AACrB,UAAMjB,KAAK,GAAGkB,GAAG,CAACD,MAAM,CAACrB,EAAR,CAAjB;AACA,WACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEqB,MAAM,CAACrB,EAAvB;AAA2B,MAAA,KAAK,EAAEqB,MAAM,CAACf,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,MAAM,CAAClB,MAAP,IAAiB,OAAOC,KAAP,KAAiB,QAAlC,GACGiB,MAAM,CAAClB,MAAP,CAAcC,KAAd,CADH,GAEGA,KAHN,CADF;AAOD,GATA,CADH,CADD,CADH,CAdF,CADF,CADF,CADF,CADF,CADF;AAyCD,CA5CD;;AA8CA,eAAec,YAAf","sourcesContent":["import React from 'react';\n\n//* MUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n// TODO: GIVE THE LINK THE PROFILE\nconst columns = [\n  { id: 'aadhar', label: 'Aadhar #', minWidth: 170 },\n  { id: 'lastName', label: 'Last Name', minWidth: 170 },\n  {\n    id: 'firstName',\n    label: 'First Name',\n    minWidth: 170,\n    format: value => value.toLocaleString(),\n  },\n  { id: 'button', label: 'Profile', minWidth: 170, align: 'right' },\n];\n\nfunction createObject(aadhar, firstName, lastName, profile) {\n  return { aadhar, firstName, lastName, profile };\n}\n\nconst rows = [\n  createObject(499118665246, 'Muhammad', 'Muhammad', 1),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 2),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 3),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 4),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 5),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 6),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 7),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 8),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 9),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 10),\n  createObject(499118665246, 'Muhammad', 'Muhammad', 11),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n\n  tableWrapper: {\n    overflow: 'auto',\n  },\n});\n\nconst PatientTable = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PatientTable;\n"]},"metadata":{},"sourceType":"module"}